<?php

/**
 * PluginS3Image
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class PluginS3Image extends BaseS3Image {
  
  protected function updateFileInfo($path) {
    parent::updateFileInfo($path);
    list($this->width, $this->height, $type, $attr) = getimagesize($path);
  }
  
  public function getS3ThumbnailPath() {
    return '/';
  }
  
  protected function doUploadFile(AmazonS3 $s3, $path, $filename) {
    // create thumbnail
    if ($thumbnail = $this->createThumbnail($path)) {
      $response = $s3->create_object($this->getBucket(),
      $this->getS3ThumbnailPath() . $filename,
      array('fileUpload' => $thumbnail,
                                             'acl' => AmazonS3::ACL_PRIVATE));
      unlink($thumbnail);
      if (!$response->isOK()) {
        throw new S3_Exception('Check your AWS settings, file was not uploaded successfully.');
      }
    }
  }
  
  protected function doDelete(AmazonS3 $s3) {
    if ($s3->if_object_exists($this->getBucket(),  $this->getS3ThumbnailPath() . $this->getFilename())) {
      $s3->delete_object($this->getBucket(),  $this->getS3ThumbnailPath() . $this->getFilename()); // delete old file
    }
  }
  
  
}